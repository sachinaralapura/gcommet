{
  "name": "gcomment",
  "displayName": "gcomment",
  "description": "",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.95.0"
  },
  "categories": [
    "Other"
  ],
  "repository": {
    "url": "https://github.com/sachinaralapura/gcommet.git"
  },
  "publisher": "codeBat",
  "activationEvents": [
    "onCommand:gcomment"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "configuration": {
      "title": "Ollama Settings",
      "properties": {
        "ollama.serverURL": {
          "type": "string",
          "default": "http://127.0.0.1:11434",
          "description": "The URL of the Ollama server."
        },
        "ollama.giveContext": {
          "type": "boolean",
          "description": "Add the context to the Prompt",
          "default": true
        },
        "ollama.modelName": {
          "type": "string",
          "description": "The name of the model to use."
        },
        "ollama.prompt": {
          "type": "string",
          "description": "Prompt to model",
          "default": "Given the {codeblock} below, write a brief, insightful comment that explains its purpose and functionality within the script. If applicable, mention any inputs expected in the code block.Keep the comment concise (maximum 2 lines). Wrap the comment with the appropriate comment syntax of {language} language. Avoid assumptions about the complete code and focus on the provided block.Don't rewrite the code block. Just give the comment, and no need to specify the language again. "
        }
      }
    },
    "commands": [
      {
        "command": "gcomment.generateComment",
        "title": "generate comment"
      },
      {
        "command": "gcomment.gfunctionComment",
        "title": "generate comment for a function"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.9",
    "@types/node": "20.x",
    "@types/vscode": "^1.95.0",
    "@typescript-eslint/eslint-plugin": "^8.10.0",
    "@typescript-eslint/parser": "^8.7.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "eslint": "^9.13.0",
    "ts-loader": "^9.5.1",
    "typescript": "^5.6.3",
    "webpack": "^5.95.0",
    "webpack-cli": "^5.1.4"
  },
  "dependencies": {
    "cross-fetch": "^4.0.0",
    "ollama": "^0.5.10"
  }
}